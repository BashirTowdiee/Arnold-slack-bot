AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  arnold

  Sample SAM Template for arnold
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  ArnoldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: arnold/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Role: !GetAtt ArnoldFunctionRole.Arn
      Events:
        Arnold:
          Type: Schedule
          Properties: 
            Schedule: cron(0 0-5 ? * MON-FRI *)

  ArnoldFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ['lambda.amazonaws.com']
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: ArnoldRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - 'ssm:GetParameter'
              Resource:
                - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/arnold/*'
            - Effect: Allow
              Action:
                - 's3:GetObject'
              Resource: "arn:aws:s3:::arnold-app/*"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ArnoldFunction:
    Description: "AppSec pop quiz and word of the day"
    Value: !GetAtt ArnoldFunction.Arn
